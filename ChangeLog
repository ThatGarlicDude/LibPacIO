2025-06-09 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 2.8.0
	* Updated PacIO.
		* Added uint8_t pac_rom_read(pac_rom_t* rom, const off_t offset)!
			* It'll read a single byte in memory when the ROM file is opened.
		* Added void pac_rom_readn(pac_rom_t* rom, const off_t offset, const size_t amount, uint8_t* destination)!
			* Like pac_rom_read, it'll read multiple bytes in memory.
	* Updated README.md.
		* Included the newly added functions from PacIO.

2025-06-09 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 2.7.0
	* Added pacsort.c and .h!
		* This file is used for sorting ROM files within a ROM set in lexicographical order.
		* int pac_set_sort(pac_set_t* set) is the start of the sorting process!
		* void pac_rom_swap(pac_rom_t** rom_a, pac_rom_t** rom_b) swaps two ROMs together.
		* int pac_rom_compare(pac_rom_t* rom_a, pac_rom_t* rom_b) string compares two ROM names.
		* int pac_set_find_lowest_rom(const pac_set_t* set, const off_t offset) looks for an index in the ROM set that has the lowest ROM filename.
	* Updated README.md.
		* Added functions from PacSort.

2025-06-09 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 2.6.0
	* Updated INSTALL.md!
		* Added compilers from different platforms!
		* Updated the definitions for each item in the requirements.
		* Fixed the grammar in checking the CMake version.
		* INSTALL.md now alerts users that installing the project requires admin rights.
		* Added steps to install LibPacSet on Microsoft Windows.
		* Added steps to install LibPacSet on Apple Mac.
	* Updated .gitignore.
		* Added .DS_Store.
	* Updated CMakeLists.txt.
		* Installing LibPacSet and its test executable is different on Windows now.

2025-06-08 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 2.5.1
	* Updated PacLimits.
		* Incremented each macro by one.
		* Because of this change, each and every one of the returning values get subtracted by one.
	* Updated README.md.
		* Included the newly added pac_set_scan_directory() function.

2025-06-08 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 2.5.0
	* Updated PacError.
		* Checking PAC_INFO_VERBOSE before printing the output is inverted.
	* Updated PacIO.
		* Instead of using a for loop, pac_rom_read now uses fread().
		* Same goes for pac_rom_save with fwrite().
		* Added int pac_set_scan_directory(pac_set_t* set)!
			* Uses the dirent feature to open up the ROM set directory.
			* Goes through each file, and appends them onto the virtual ROM set.
	* Updated PacRom.
		* Copying the name won't go out of bounds anymore.
		* Same with the null terminator. That won't go out of bounds anymore.
		* Clearing the ROM will now check if the data points to anything before unloading it.
		* Instead of using a for loop, copying a ROM now uses memcpy().
		* Getting the name of the ROM set no longer prints information.
		* Same with getting the size.
		* Also same with getting the data pointer.
	* Updated PacSet.
		* Like PacRom, copying the name won't go out of bounds anymore.
		* Same with the null terminator character.
		* Creating the set will automatically call the newly added pac_set_scan_directory.
		* Clearing the ROM set now destroys ROMs instead of clearing them.
			* (Not actually sure about that though. What about local, stack-pushed ROM variables?)
		* Also like PacRom, copying data from one ROM set to another uses memcpy().
		* Getting filepath no longer prints any info anymore.
		* Same with getting the size.
		* Same with getting the ROMs array.

2025-06-08 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 2.4.0
	* Added pacerror.c and .h!
		* Pacerror.c and .h features three functions, pac_info(), pac_warn(), and pac_error().
		* pac_info() is basic debug output to the terminal.
		* pac_warn() prints warning messages to the terminal.
		* pac_error() prints error messages to the terminal.
		* Users can have the option to silence pac_info() if they don't want debug info being printed out.
		* Because of this change, most of the code now uses the pacerror functions.
	* Updated README.md!
		* README.md now features functions from the newly added PacError.

2025-06-05 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 2.3.1
	* Updated pacio.c and .h.
		* Updated pac_path_generate().
			* pac_path_generate now returns a char* instead of a const char*.
	* Updated README.md.
		* Updated the functions.

2025-06-05 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 2.3.0
	* Updated pacio.c and .h.
		* Added const char* pac_path_generate(const char* path)!
			* pac_path_generate returns the absolute path of a file or directory.
			* It's also cross-platform.
		* Added void pac_path_clear(char* path)!
			* pac_path_clear cleans up the path string with zeroes, and frees the array.
	* Updated README.md.
		* README.md now includes the newly added functions from pacio.c and .h.
	* Updated CMakeLists.md.
		* CMakeLists now requires C++ 11, as well as its extensions, to run.
	* Updated INSTALLMD.md.
		* Included C++ 11 as part of the requirements.

2025-06-05 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 2.2.0
	* Updated pacset.c and .h.
		* Added void pac_set_copy(const pac_set_t* set_source, pac_set_t* set_destination)!
			* pac_set_copy copies the source ROM set to another ROM set, which is the destination.
		* Added pac_set_t* pac_set_duplicate(const pac_set_t* set_source)!
			* pac_set_duplicate allocates a new ROM set, which is the destination.
			* pac_set_duplicate then copies each byte from the source to the destination.
			* It'll return the newly allocated ROM set if successful.
	* Updated pacrom.c and .h.
		* Added void pac_rom_copy(const pac_rom_t* rom_source, pac_rom_t* rom_destination)!
			* pac_rom_copy copies the source ROM to another ROM, which is the destination.
		* Added pac_rom_t* pac_rom_duplicate(const pac_rom_t* rom_source)!
			* pac_rom_duplicate allocates a new ROM, which is the destination.
			* pac_rom_duplicate then copies each byte from the source to the destination.
			* It'll return the newly allocated ROM if successful.
	* Updated README.md
		* Added the new functions to their respective categories.
	* Updated CMakeLists.txt.
		* The project now supports C++.

2025-06-05 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 2.1.0
	* Source files can now include their own header files, making function calls easier and universal.
	* Because of this change, source files that have typedef structs no longer have them anymore.
		* Those structs are now defined in the header files.
	* Header files are given a polished look.
	* All functions are now compatible with C++.
	* Added char path[] to pac_set_t.
	* The roms array in pac_set_t is no longer a dynamic array, but now a static array.
	* Because char path[] is added to pac_set_t, pac_set_init now requires a const char* path as the parameter.
		* Also pac_set_create() too.
	* Cleaned up pac_set_init, now only copying the path to its newly added path array.
	* pac_set_create() now callocs the ROM set instead of malloc.
	* pac_set_create() also now calls pac_set_init().
	* pac_set_clear() now calls pac_rom_clear() in each pac_rom_t in its array.
	* pac_set_clear() now memsets the whole struct with zeroes, clearing everything up.
	* Added const char* pac_set_get_path(const pac_set_t* set).
	* Because roms is now a pac_rom_t* array, it'll return a pac_rom_t* const* variable.
	* Removed pac_set_change_size().
	* pac_set_append_rom is now a tad bit cleaner.
	* The name variable in pac_rom_t is now longer a dynamic string, but a static char array.
	* pac_rom_init() is now cleaner, only copying the name argument to its name.
	* pac_rom_create() now callocs the local pac_rom_t variable instead of mallocing it.
	* pac_rom_create() now calls pac_rom_init().
	* pac_rom_clear() can now call pac_rom_unload(), if it has any data in there.
	* pac_rom_clear() now memsets the entire pac_rom_t struct with zeroes.
	* All functions that have to do with initiating, clearing, and destroying structs now no longer returns an int.
	* Removed pac_rom_set_name().
	* pac_rom_load() no longer opens the file right away.
		* Same with pac_rom_save().
	* If a file doesn't exist while pac_rom_load is called, it'll now just close the file instead of leaving it open on accident.
		* Also same with pac_rom_save().
	* pac_rom_unload() is now put inbetween pac_rom_load() and pac_rom_save().
	* Printing debug information for ROMs and ROM sets are now detailed with colors and bold text.
	* Added paclimits.c and .h.
		* paclimits.c and .h features read-only macros and getters for said macros.
	* Updated README.md, featuring the newly added paclimits.c.

2025-06-01 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 2.0.0
	* MAJOR UPDATE TIME!
	* romFile.c and .h are now called pacrom.c and .h.
	* romSet.c and .h are now called pacset.c and .h.
	* romSetPrinter.c and .h are now called pacprint.c and .h.
	* romIO.c and .h are now called pacio.c and .h.
	* Removed romSetHandler.c and .h.
	* The typedef RomFile struct is now called pac_rom_t, with the tag being pac_rom.
	* Rearranged some variables in the pac_rom_t struct.
	* The struct's fileName is now called name, and it's no longer a constant.
	* The struct's data now uses a uint8_t type instead of unsigned char.
	* newROMFile is now called pac_rom_init, now requiring both a pac_rom_t* and const char* for the filename.
	* pac_rom_t's filename can now duplicated to a safe location in memory.
	* pac_rom_init now returns an int.
	* Added pac_rom_t* pac_rom_create(const char* name), allocating a virtual ROM into memory.
	* Added int pac_rom_clear(pac_rom_t* rom), which frees up and nullifies the virtual ROM's information from memory.
	* Added void pac_rom_destroy(pac_rom_t* rom), which frees up the virtual ROM from memory.
	* Added void pac_rom_set_name(pac_rom_t* rom, const char* name), which allocates a new filename string.
	* getFileName() is now called pac_rom_get_name().
	* getSize() is now called pac_rom_get_size().
	* getData() is now called pac_rom_get_data(), which now returns a constant uint8_t pointer.
	* The typedef RomSet struct is now called pac_set_t, now including a tag called pac_rom.
	* The ROM array in the struct is now pac_rom_t** roms, now pointing to an array of ROM pointers.
	* newROMSet() is now called pac_set_init(pac_set_t* set), and it returns an int instead of a ROM set.
	* Added pac_set_t* pac_set_create(), allocating a virtual ROM set into memory.
	* Added int pac_set_clear(pac_set_t* set), which frees up and nullifies the virtual ROM set's information from memory.
	* Added void pac_set_destroy(pac_set_t* set), which frees up the virtual ROM set from memory.
	* Added size_t pac_set_get_size(const pac_set_t* set), which returns the size of the ROM set.
	* Added pac_rom_t** pac_set_get_roms(const pac_set_t* set), which returns the ROM pointer array.
	* getROM() is now called pac_set_get_rom(const pac_set_t* set, const size_t index).
	* Removed freeROMs(), as it is no longer necessary.
	* Contents that were from romSetHandler.c and .h were now moved to pacset.c and .h.
	* changeROMSetSize() is now called pac_set_change_size(pac_set_t* set, const size_t size).
	* appendROM() is now called int pac_set_append_rom(pac_set_t* set, pac_rom_t* rom).
	* readROM() is now called pac_rom_load(pac_rom_t* rom).
	* writeROM() is now called pac_rom_save(pac_rom_t* rom).
	* Removed freeROMData().
	* Added pac_rom_unload(pac_rom_t* rom), which sets all the virtual bytes to 0 (not in the file).
	* printROMData() is now called pac_rom_printd(pac_rom_t* rom).
	* printROMFile() is now called pac_rom_print(pac_rom_t* rom).
	* Added pac_set_printp(pac_set_t* set), which prints all the ROM pointers in the array.
	* printROMSet() is now called pac_set_print(pac_set_t* set).
	* Added test.c, which is only used for debugging the project.
	* test.c will not be compiled onto the shared library.
	* CMakeLists.txt no longer wildcards each file in the source directory, hardcoding each file instead.
	* Added MAIN, which refers to src/test.c.
	* CMakeLists.txt can now create a test executable called pacset_test.
	* The executable will link LibPacSet upon compilation.
	* Updated INSTALL.md, making it more polished and beginner friendly while including C99 as a requirement.
	* Updated README.md, adding more clarity and flair to it.
	* README.md also includes a list of all the functions in the project.

2025-05-29 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 1.7.1
	* Fixed printing data within ROM files by adding \n to it.

2025-05-28 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 1.7.0
	* RomFiles now use const char* again, just to make sure they don't get overwritten.
	* With that change, functions use const char* arguments again.
	* Added lots of failsafe stuff.
	* Oh yeah, and also printing outputs for debugging.

2025-05-28 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 1.6.0
	* Added romIO.c and .h!
	* romIO features reading and writing data from ROM files (finally).
	* To make up for the addition of reading data, the RomFile struct now has a size and data array.
	* Also, the read and write functionalities were moved to romIO instead of romFile.c.
	* Adjusted the printing output from romSetPrinter.c.
	* Added printROMData(), which prints both addresses and data in hexadecimal.
	* Updated README.md, featuring the reading and writing functionalities.

2025-05-26 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 1.5.0
	* Updated INSTALL.md to be more beginner-friendly.
	* Polished the project's icon, logo, and title.
	* Updated the README.md page, polishing up the overview and featuring the copyright disclaimer.

2025-05-25 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 1.4.1
	* Reverted change for including the headers directory.

2025-05-25 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 1.4.0
	* Added INSTALL.md!
	* CMakeLists.txt is much cleaner than it was before.
	* LibPacSet now requires CMake version 3.18 or higher to make.
	* LibPacSet now simply requires the C language to run.
	* Made it so LibPacSet does not require C extensions when building.
	* CMake now just simply includes the headers directory.
	* Readded the install function.

2025-05-21 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 1.3.0
	* Added the function getROM(), which returns the address of a ROM file.
	* Fixed including romSet.h twice in romSetHandler.c.
	* Changed functions in romSetHandler.c to capitalize ROM in their names.
	* Reallocating the ROM set array now casts the size of a RomFile instead of const char*.
	* RomFiles can now be printed via printROMFile().
	* Changed printRomSet() to printROMSet().
	* printROMSet will now print data about the ROM set, including its ROM files.

2025-05-13 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 1.2.0
	* Added romFile.c and .h.
	* romFile contains a struct called RomFile, and functions associated with it.
	* filePathHandler.c and .h are now called romSetHandler.
	* romSetHandler now just uses char* instead of const char*.
	* The RomSet struct now uses the new RomFile struct instead of strings.
	* appendRom now adds a RomFile struct into a RomSet.

2025-05-13 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 1.1.1
	* Made the title image a header.

2025-05-13 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 1.1.0
	* Added an assets directory, containing the logo, icon, and title.
	* README.md now uses the stylized title image for its header.

2025-05-01 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 1.0.1
	* Shared library no longer needs to be installed to /usr/local/lib anymore.
	* Library is now treated as a submodule for other projects.

2025-04-30 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 1.0.0
	* Simplified everything.
	* Removed NEWS, as it is not needed.
	* Removed TODO.
	* FilePathArrays are now simply called ROM Sets.
	* ROM Sets are now treated as stacks instead of complicated dynamic arrays.
		* ROM files can be appended on the stack.
	* Removed filePathExtender.
	* Removed filePathGetter.
	* Removed filePathTrimmer.
	* Removed nullHandler.
	* Removed stringAdder.
	* Reworked on printing ROM Sets.
	* CMake process no longer uses -fPIC as its flag.

2025-04-09 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 0.0.9-alpha
	* Removed decrementing the size of a filePathArray when trimming, as it causes problems.
	* Changing the size of a filePathArray now uses size_t instead of int.
	* Cleaned up newFilePathArray() a bit.
	* Cleaned up the header files.

2025-04-09 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 0.0.8-alpha
	* Added trimming!
	* filePathTrimmer.c and .h are added!
	* filePathArrays can now be resized based on the location of the first null pointer.

2025-04-08 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 0.0.7-alpha
	* Removed the ability to print pointers for indexes individually.
	* Removed romSet.c and .h.
	* Removed the default string for adding strings, as there is no need for strings to have that.
	* Removed the unneccesary casting in fileExtender.c.
	* Removed the function that simply returns a FilePathArray itself, as there is no need to use it.

2025-04-03 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 0.0.6-alpha
	* The project is now capitalized, no longer being called "libpacset".
	* The project is now a shared library instead of an executable.
	* Added filePathExtender (doesn't do anything for now).
	* Filepaths no longer point to a default string anymore.
	* The filePaths variable in a FilePathArray can be freed via a function.
	* Pointers in a filePaths array can be printed.
	* Finding the first and last null pointers will now return an index instead of a null pointer.
	* Removed debug.c (did so much debugging that it just disappeared).

2025-03-27 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 0.0.5-alpha
	* CMakeLists.txt now uses the -fPIC flag.
	* Added nullHandler.
	* Added stringAdder.
	* Did even more debugging.

2025-03-27 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 0.0.4-alpha
	* Added filePathPrinter.
	* Did more debugging.

2025-03-27 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 0.0.3-alpha
	* Added filePathGetter.
	* Getting the size and filePaths of the FilePathArray is moved to that filePathGetter.
	* Getting the size of the FilePathArray now returns a pointer.
	* You can now get a string in the FilePathArray via getFilePath.
	* Did lots of debugging.

2025-03-25 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 0.0.2-alpha
	* Renamed romSetDirectory to filePathArray.
	* Added a whole bunch of code to filePathArray.
	* Gave the filePathArray header a proper definition.
	* GitIgnore now ignores the build folder and its contents.

2025-03-18 GarlicDude <https://www.github.com/ThatGarlicDude>

	LibPacSet Version 0.0.1-alpha
	* Added the base files and directories, such as AUTHORS, CMakeLists.txt, src, and headers.
